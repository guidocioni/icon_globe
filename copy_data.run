#!/usr/local/bin/bash

# Folder to be used to download and process data
export MODEL_DATA_FOLDER="/Users/thd5tt/Downloads/temp/"
export HOME_FOLDER=$(pwd)
export N_CONCUR_PROCESSES=4 
export NCFTP_BOOKMARK="altervista"
DATA_DOWNLOAD=true
DATA_PLOTTING=false
DATA_UPLOAD=false

##### LOAD functions to download model data
. ./functions_download_dwd.sh
export SHELL=$(type -p bash)
# We need to open many files at the same time
ulimit -Sn 4096
# 
source ~/.bash_profile
# acivate our environment 
#conda activate nwp-py2
###########################################

mkdir -p ${MODEL_DATA_FOLDER}world
mkdir -p ${MODEL_DATA_FOLDER}us

##### COMPUTE the date variables to determine the run
export year=`date +"%Y"`
export month=`date +"%m"`
export day=`date +"%d"`
export hour=`date +"%H"`
export hour_no_zero=`date -u +"%-H"`
# note that this date is in UTC which is needed for retrieving the correct run!

if [ "$hour_no_zero" -ge 4 ] && [ "$hour_no_zero" -lt 9 ] 
then 
 run="00"
elif [ "$hour_no_zero" -ge 9 ] && [ "$hour_no_zero" -lt 16 ] 
then
 run="06"
elif [ "$hour_no_zero" -ge 16 ] && [ "$hour_no_zero" -lt 21 ] 
then
 run="12"
elif [ "$hour_no_zero" -ge 21 ] 
then
 run="18"
fi

export run
###########################################

# Move to the data folder to do processing
cd ${MODEL_DATA_FOLDER} || { echo 'Cannot change to DATA folder' ; exit 1; }

# SECTION 1 - DATA DOWNLOAD ############################################################

if [ "$DATA_DOWNLOAD" = true ]; then
	# Remove older files
	#rm ${MODEL_DATA_FOLDER}*.nc
	rm ${MODEL_DATA_FOLDER}*.grib2

	# Invariant
	download_invariant_icon_globe

	#2-D variables
	variables=("PMSL" "CLCT" "TOT_PREC" "VMAX_10M" "RAIN_CON"\
				 "RAIN_GSP" "SNOW_CON" "SNOW_GSP" "T_2M" "TD_2M" "WW")
	parallel -j ${N_CONCUR_PROCESSES} download_merge_2d_variable_icon_globe ::: "${variables[@]}"

	#3-D variables on pressure levels
	variables=("T" "FI" "RELHUM" "U" "V")
	parallel -j ${N_CONCUR_PROCESSES} download_merge_3d_variable_icon_globe ::: "${variables[@]}"

	# optional use only 3 hourly data 
	# cdo select,hour=0,3,6,9,12,15,18,21 ICON_${year}${month}${day}${run}.nc ICON_${year}${month}${day}${run}_3h.nc
	# rm icon_global_* 
	# optional remapping
	# cdo -O -r remapnn,grid.cdo ICON_${year}${month}${day}${run}.nc ICON_${year}${month}${day}${run}_remap.nc

fi 

# SECTION 2 - DATA PLOTTING ############################################################

if [ "$DATA_PLOTTING" = true ]; then
	python --version
	cp ${HOME_FOLDER}/plotting/*.py ${MODEL_DATA_FOLDER}

	export QT_QPA_PLATFORM=offscreen # Needed to avoid errors when using Python without display

	python plot_meteogram.py Hamburg Storrs Milan Pisa Toulouse Rome Naples Utrecht Sassari Palermo Cagliari

	scripts=("plot_jetstream.py" "plot_rain_acc.py" "plot_clouds.py" "plot_geop_500.py"\
			 "plot_mslp_wind.py" "plot_thetae.py")

	projections=("nh" "us")
	parallel -j ${N_CONCUR_PROCESSES} python ::: "${scripts[@]}" ::: "${projections[@]}"

	# scripts=("plot_jetstream.py" "plot_rain_acc.py" "plot_geop_500.py" "plot_mslp_wind.py" "plot_thetae.py")
	# parallel -j ${N_CONCUR_PROCESSES} python ::: "${scripts[@]}" ::: "world"
fi


# SECTION 3 - IMAGES UPLOAD ############################################################
# Use ncftpbookmarks to add a new FTP server with credentials
if [ "$DATA_UPLOAD" = true ]; then
	# First upload meteograms
	ncftpput -R -v ${NCFTP_BOOKMARK} icon_globe/meteograms meteogram_*
	#
	# Then upload the other pictures
	#
	images_output=("thetae_850" "gph_500" "winds10m" "precip_clouds" "winds_jet" "precip_acc")

	# suffix for naming
	projections_output=("" "us/")
	# remote folder on server
	projections_output_folder=("icon_globe" "icon_us")

	# Create a lisf of all the images to upload 
	upload_elements=()
	for i in "${!projections_output[@]}"; do
		for j in "${images_output[@]}"; do
			upload_elements+=("${projections_output_folder[$i]}/${j} ./${projections_output[$i]}${j}_*")
		done
	done

	# Finally upload the images 
	for k in "${upload_elements[@]}"; do
		ncftpput -R -v ${NCFTP_BOOKMARK} ${k}
	done

fi 

# SECTION 4 - CLEANING ############################################################

#Remove images locally
rm ${MODEL_DATA_FOLDER}*.png
rm ${MODEL_DATA_FOLDER}us/*.png
rm ${MODEL_DATA_FOLDER}world/*.png
rm ${MODEL_DATA_FOLDER}*.py

############################################################

cd -